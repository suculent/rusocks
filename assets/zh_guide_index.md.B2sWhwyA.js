import{_ as t}from"./chunks/abstract.Cq9_B8qJ.js";import{_ as a,c as o,o as r,ae as n}from"./chunks/framework.U1Gow_7P.js";const k=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/index.md","filePath":"zh/guide/index.md"}'),s={name:"zh/guide/index.md"};function i(p,e,c,d,l,_){return r(),o("div",null,e[0]||(e[0]=[n('<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><p>LinkSocks 是一个基于 WebSocket 协议的 SOCKS5 代理工具。它允许您创建安全的代理连接，可以穿越防火墙和 Web 应用防火墙。</p><p>LinkSocks 的反向代理模式可用于内网穿透。但与其他专注于特定机器的内网穿透工具不同，LinkSocks 能够处理动态客户端，可以随时加入和离开。新客户端无需服务端配置。</p><p>LinkSocks 的正向代理模式通过 WebSocket 共享服务器网络，将代理流量伪装成 Web 流量以绕过防火墙并防止 IP 泄露。</p><p><img src="'+t+'" alt="架构图"></p><h2 id="工作原理" tabindex="-1">工作原理 <a class="header-anchor" href="#工作原理" aria-label="Permalink to &quot;工作原理&quot;">​</a></h2><p>LinkSocks 支持两种主要的代理场景：</p><p><strong>正向代理</strong>：客户端通过 SOCKS5 连接到服务器的网络。服务器充当互联网网关。</p><p><strong>反向代理</strong>：服务器暴露 SOCKS5 接口，多个客户端通过负载均衡共享他们的网络访问。</p><h2 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h2><p><strong>验证码解决</strong>：使用客户端 IP 而不是服务器 IP 来绕过 Cloudflare 限制</p><p><strong>网络渗透</strong>：通过被攻陷的主机访问内部网络，而不暴露攻击基础设施</p><p><strong>流量伪装</strong>：WebSocket 传输看起来像普通的 Web 流量，绕过防火墙限制</p>',13)]))}const m=a(s,[["render",i]]);export{k as __pageData,m as default};
