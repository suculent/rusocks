import{_ as i,c as a,o as n,ae as t}from"./chunks/framework.U1Gow_7P.js";const F=JSON.parse('{"title":"身份验证","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/authentication.md","filePath":"zh/guide/authentication.md"}'),h={name:"zh/guide/authentication.md"};function l(e,s,p,k,r,o){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="身份验证" tabindex="-1">身份验证 <a class="header-anchor" href="#身份验证" aria-label="Permalink to &quot;身份验证&quot;">​</a></h1><p>LinkSocks 支持多种身份验证方法：</p><ol><li><strong>WebSocket 令牌</strong> - 在正向/反向代理模式中使用</li><li><strong>连接者令牌</strong> - 在代理代理模式中由代理消费者使用</li><li><strong>SOCKS 凭据</strong> - 由连接到代理的程序使用</li></ol><h2 id="websocket-令牌" tabindex="-1">WebSocket 令牌 <a class="header-anchor" href="#websocket-令牌" aria-label="Permalink to &quot;WebSocket 令牌&quot;">​</a></h2><p>在正向和反向代理模式中用于客户端-服务器身份验证。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 服务器（如果省略则自动生成）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linksocks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server_token</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 客户端（必需）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linksocks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> client</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server_token</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ws://localhost:8765</span></span></code></pre></div><h2 id="代理代理模式令牌" tabindex="-1">代理代理模式令牌 <a class="header-anchor" href="#代理代理模式令牌" aria-label="Permalink to &quot;代理代理模式令牌&quot;">​</a></h2><p>在代理代理模式下，服务器充当提供者和连接者之间的中继，每种类型使用不同的令牌。</p><h3 id="常规代理模式" tabindex="-1">常规代理模式 <a class="header-anchor" href="#常规代理模式" aria-label="Permalink to &quot;常规代理模式&quot;">​</a></h3><p>在常规代理模式下，服务器集中管理所有令牌：</p><p><strong>服务器端 - 定义两个令牌：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 服务器设置提供者令牌和连接者令牌</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linksocks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> provider_token</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> connector_token</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9870</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span></code></pre></div><p><strong>提供者端 - 使用提供者令牌：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 提供者使用服务器设置的提供者令牌</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linksocks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> provider</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> provider_token</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ws://localhost:8765</span></span></code></pre></div><p><strong>连接者端 - 使用连接者令牌：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 连接者使用服务器设置的连接者令牌</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linksocks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> connector</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> connector_token</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ws://localhost:8765</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1180</span></span></code></pre></div><h3 id="自主模式令牌" tabindex="-1">自主模式令牌 <a class="header-anchor" href="#自主模式令牌" aria-label="Permalink to &quot;自主模式令牌&quot;">​</a></h3><p>自主模式允许提供者设置自己的连接者令牌，创建隔离的提供者-连接者对。</p><p><strong>服务器端 - 仅提供者令牌：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 服务器仅设置提供者令牌，不需要连接者令牌</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linksocks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> provider_token</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span></span></code></pre></div><p><strong>提供者端 - 设置自己的连接者令牌：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 提供者使用提供者令牌连接并定义自定义连接者令牌</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linksocks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> provider</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> provider_token</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_custom_connector_token</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ws://localhost:8765</span></span></code></pre></div><p><strong>连接者端 - 使用提供者的令牌：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 连接者使用提供者的自定义令牌</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linksocks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> connector</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_custom_connector_token</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ws://localhost:8765</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1180</span></span></code></pre></div><h3 id="自主模式令牌流程" tabindex="-1">自主模式令牌流程 <a class="header-anchor" href="#自主模式令牌流程" aria-label="Permalink to &quot;自主模式令牌流程&quot;">​</a></h3><ol><li><strong>服务器</strong>：仅验证提供者令牌（<code>-t provider_token</code>），不管理连接者令牌</li><li><strong>提供者</strong>：使用提供者令牌（<code>-t</code>）进行身份验证并定义连接者令牌（<code>-c</code>）</li><li><strong>连接者</strong>：使用提供者的自定义令牌（<code>-t custom_token</code>）</li><li><strong>隔离</strong>：每个连接者只能访问其对应的提供者</li></ol><h2 id="socks5-凭据" tabindex="-1">SOCKS5 凭据 <a class="header-anchor" href="#socks5-凭据" aria-label="Permalink to &quot;SOCKS5 凭据&quot;">​</a></h2><p>在 SOCKS5 接口本身上进行可选的用户名/密码身份验证。</p><h3 id="在哪里设置-socks5-凭据" tabindex="-1">在哪里设置 SOCKS5 凭据 <a class="header-anchor" href="#在哪里设置-socks5-凭据" aria-label="Permalink to &quot;在哪里设置 SOCKS5 凭据&quot;">​</a></h3><ul><li><strong>正向模式</strong>：在 <code>client</code> 上设置（运行 SOCKS5 服务器的一方）</li><li><strong>反向模式</strong>：在 <code>server</code> 上设置（运行 SOCKS5 服务器的一方）</li><li><strong>代理模式</strong>：在 <code>connector</code> 上设置（运行 SOCKS5 服务器的一方）</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 正向模式 - 客户端提供 SOCKS5 服务器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linksocks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> client</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> token</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ws://localhost:8765</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9870</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pass</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 反向模式 - 服务器提供 SOCKS5 服务器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linksocks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> token</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9870</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pass</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 代理模式 - 连接者提供 SOCKS5 服务器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linksocks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> connector</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> connector_token</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9870</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pass</span></span></code></pre></div><h2 id="令牌生成" tabindex="-1">令牌生成 <a class="header-anchor" href="#令牌生成" aria-label="Permalink to &quot;令牌生成&quot;">​</a></h2><p>对于生产使用，请使用以下命令生成强随机令牌：</p><p><strong>Linux/macOS：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rand</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -hex</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span></span></code></pre></div><p><strong>Windows PowerShell：</strong></p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">System.Web.Security.Membership</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]::GeneratePassword(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,37)]))}const c=i(h,[["render",l]]);export{F as __pageData,c as default};
