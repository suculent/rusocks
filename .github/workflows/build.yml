name: Build Release Binaries

on:
  workflow_dispatch:
  release:
    types: [released]

permissions:
  contents: write

jobs:
  build:
    name: Build and Upload Release Assets
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows builds
          - os: windows
            arch: x86_64
            target: x86_64-pc-windows-msvc
            extension: .exe
          - os: windows
            arch: aarch64
            target: aarch64-pc-windows-msvc
            extension: .exe
          
          # Linux builds
          - os: linux
            arch: x86_64
            target: x86_64-unknown-linux-gnu
            extension: ""
          - os: linux
            arch: aarch64
            target: aarch64-unknown-linux-gnu
            extension: ""
          - os: linux
            arch: i686
            target: i686-unknown-linux-gnu
            extension: ""
          - os: linux
            arch: armv7
            target: armv7-unknown-linux-gnueabihf
            extension: ""
          
          # macOS builds
          - os: macos
            arch: x86_64
            target: x86_64-apple-darwin
            extension: ""
          - os: macos
            arch: aarch64
            target: aarch64-apple-darwin
            extension: ""

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross (for cross-compilation)
        if: matrix.os == 'linux' && matrix.arch != 'x86_64'
        run: cargo install cross

      - name: Build Binary (native)
        if: matrix.os != 'linux' || matrix.arch == 'x86_64'
        run: |
          cargo build --release --target ${{ matrix.target }} --bin rusocks
          cp target/${{ matrix.target }}/release/rusocks${{ matrix.extension }} rusocks-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}

      - name: Build Binary (cross)
        if: matrix.os == 'linux' && matrix.arch != 'x86_64'
        run: |
          cross build --release --target ${{ matrix.target }} --bin rusocks
          cp target/${{ matrix.target }}/release/rusocks${{ matrix.extension }} rusocks-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: rusocks-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}